           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 01-JUN-2014 19:41:14.12

                         function Measures.LimitBPM




For path(s) from start to precondition check associated with statement of line 21:

function_limitbpm_1.
H1:    true .
H2:    input >= integer__first .
H3:    input <= integer__last .
        ->
C1:    bpm__first <= bpm__last .
C2:    bpm__last >= integer__first .
C3:    bpm__last <= integer__last .
C4:    bpm__first >= integer__first .
C5:    bpm__first <= integer__last .
C6:    input >= integer__first .
C7:    input <= integer__last .
 

For path(s) from start to finish:

function_limitbpm_2.
H1:    true .
H2:    input >= integer__first .
H3:    input <= integer__last .
H4:    bpm__first <= bpm__last .
H5:    bpm__last >= integer__first .
H6:    bpm__last <= integer__last .
H7:    bpm__first >= integer__first .
H8:    bpm__first <= integer__last .
H9:    input >= integer__first .
H10:   input <= integer__last .
H11:   limit(input, bpm__first, bpm__last) >= integer__first .
H12:   limit(input, bpm__first, bpm__last) <= integer__last .
H13:   bpm__first <= limit(input, bpm__first, bpm__last) .
H14:   limit(input, bpm__first, bpm__last) <= bpm__last .
        ->
C1:    bpm__first <= limit(input, bpm__first, bpm__last) .
C2:    limit(input, bpm__first, bpm__last) <= bpm__last .
C3:    limit(input, bpm__first, bpm__last) >= bpm__first .
C4:    limit(input, bpm__first, bpm__last) <= bpm__last .
 

